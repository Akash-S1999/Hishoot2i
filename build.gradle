plugins {
    //
    id 'com.android.application' version '4.1.3' apply false
    id 'org.jetbrains.kotlin.android' version '1.4.31' apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.31' apply false
    id 'dagger.hilt.android.plugin' version '2.33-beta' apply false
    id 'androidx.navigation.safeargs.kotlin' version '2.3.4' apply false

    id 'com.diffplug.spotless' version '5.11.0'
    id 'com.github.ben-manes.versions' version '0.38.0'
    id 'com.autonomousapps.dependency-analysis' version '0.71.0'
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven() {
            url 'https://dl.bintray.com/pdvrieze/maven'
            content { includeModuleByRegex(/net\.devrieze/, /xmlutil.*/) }
        }
        gradlePluginPortal()
    }

    ext {
        // region Version
        coilVersion = project.coilVersion
        coroutinesVersion = project.coroutinesVersion
        daggerHiltVersion = project.daggerHiltVersion
        daggerVersion = project.daggerVersion
        desugarVersion = project.desugarVersion
        googleMaterialVersion = project.googleMaterialVersion
        kotlinVersion = project.kotlinVersion
        ktLintVersion = project.ktLintVersion
        leakcanaryVersion = project.leakcanaryVersion
        okHttpVersion = project.okHttpVersion
        serializationVersion = project.serializationVersion
        timberVersion = project.timberVersion
        xActivityVersion = project.xActivityVersion
        xAnnotationVersion = project.xAnnotationVersion
        xAppCompatVersion = project.xAppCompatVersion
        xArchCoreVersion = project.xArchCoreVersion
        xBrowserVersion = project.xBrowserVersion
        xCollectionVersion = project.xCollectionVersion
        xConstraintLayoutVersion = project.xConstraintLayoutVersion
        xCoordinatorLayoutVersion = project.xCoordinatorLayoutVersion
        xCoreVersion = project.xCoreVersion
        xCustomViewVersion = project.xCustomViewVersion
        xDocumentFileVersion = project.xDocumentFileVersion
        xDrawerLayoutVersion = project.xDrawerLayoutVersion
        xFragmentVersion = project.xFragmentVersion
        xHiltVersion = project.xHiltVersion
        xLifeCycleVersion = project.xLifeCycleVersion
        xmlUtilVersion = project.xmlUtilVersion
        xMultiDexVersion = project.xMultiDexVersion
        xNavigationVersion = project.xNavigationVersion
        xRecyclerViewVersion = project.xRecyclerViewVersion
        xRoomVersion = project.xRoomVersion
        //
        hamcrestVersion = project.hamcrestVersion
        jUnitVersion = project.jUnitVersion
        robolectricVersion = project.robolectricVersion
        // endregion
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails drd ->
            def group = drd.requested.group
            def name = drd.requested.name
            if (group ==~ /androidx\.arch\.core/) drd.useVersion xArchCoreVersion
            if (group ==~ /androidx\.collection/) drd.useVersion xCollectionVersion
            if (group ==~ /androidx\.lifecycle/) drd.useVersion xLifeCycleVersion
            if (group ==~ /com\.squareup\.okhttp3/) drd.useVersion okHttpVersion
            if (group ==~ /org\.jetbrains\.kotlin/) drd.useVersion kotlinVersion
            if (group ==~ /org\.jetbrains\.kotlinx/ && name ==~ /kotlinx-coroutines.*/)
                drd.useVersion coroutinesVersion
        }
    }

    apply from: "$rootDir/buildsystem/spotless.gradle"
}

dependencyAnalysis {
    issues {
        all {
            onAny {
                severity 'fail'
            }
        }
    }
}

tasks.named('dependencyUpdates').configure {
    def isStable = { String version ->
        return version ==~ /^[0-9,.v-]+(-r)?$/
    }
    rejectVersionIf { !isStable(it.candidate.version) && isStable(it.currentVersion) }
    checkForGradleUpdate = false //
}

subprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = '1.8'
            allWarningsAsErrors = true
            verbose = true
            useIR = true
        }
    }
}
