import java.text.SimpleDateFormat

// use only at [sub-]module app buildFile [app/app.gradle.kts]
android {
    applicationVariants.all { variants ->
        if (variants.buildType.name == 'release') {
            def ver = Versioning.from(project)
            variants.outputs.all { output ->
                output.versionCodeOverride = ver.code
                output.versionNameOverride = ver.name
            }
        }
    }
}

final class Versioning {
    //region consumable fields
    public final String name
    public final int code
    //endregion

    private final Project thisProject
    private volatile String versionNameFromFile = null

    static final Versioning from(Project p) { return new Versioning(p) }

    private Versioning(Project p) {
        def buildTime = getBuildTime()
        this.thisProject = p
        this.name = getVersionName(buildTime)
        this.code = getVersionCode(buildTime)
    }

    @Override
    String toString() {
        return "Versioning (name:$name; code:$code)"
    }
    private static final String FILE_NAME_VERSION = "VERSION"

    private static String getBuildTime() {
        def today = new Date()
        // HiShoot2i 1st release = 2015
        def year = String.valueOf((new SimpleDateFormat("yy").format(today) as int) - 15)
        def dayInYear = String.format("%03d", (new SimpleDateFormat("D").format(today)) as int)
        def buildTime = year + dayInYear
        // println("buildTime: $buildTime")
        return buildTime
    }

    private int getVersionCode(String buildTime) {
        def n = getVersionFromFile()
        try {
            def s = n.tokenize('.')*.toInteger()
            return (s[0] * 1000000 + s[1] * 100000 + s[2] * 10000 + buildTime.toInteger())
        } catch (Exception e) {
            logError("Error on getVersionCode with: $n, $buildTime", e)
            return 1
        }
    }

    private String getVersionName(String buildTime) {
        return String.format("%s-%s", getVersionFromFile(), buildTime)
    }

    private synchronized String getVersionFromFile() {
        if (versionNameFromFile != null) return versionNameFromFile
        try {
            versionNameFromFile = thisProject.rootProject.file(FILE_NAME_VERSION).getText()
            return versionNameFromFile
        } catch (Exception e) {
            logError("Can't read file $FILE_NAME_VERSION", e)
            return "1.0.0"
        }
    }

    private void logError(String message, Exception e) {
        thisProject.getLogger().error(message, e)
    }
}
