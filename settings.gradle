pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    // TODO: versionCatalogs not support plugin version
    //  https://github.com/gradle/gradle/issues/16078#issuecomment-782825425
    def fromCatalog = { String catalog, String id ->
        return file("gradle/${catalog}.versions.toml")
                .readLines().findAll { it.contains id }
                .first().split('"')[1]
    }
    def xNavigationVersion = fromCatalog("androidxLibs", "navigation")
    def agpVersion = fromCatalog("libs", "agp")
    def daggerHiltVersion = fromCatalog("libs", "daggerHilt")
    def dependencyAnalysisVersion = fromCatalog("libs", "dependencyAnalysis")
    def dependencyUpdatesVersion = fromCatalog("libs", "dependencyUpdates")
    def kotlinVersion = fromCatalog("libs", "kotlin")
    def spotlessVersion = fromCatalog("libs", "spotless")
    plugins {
        id 'androidx.navigation.safeargs.kotlin' version "$xNavigationVersion"
        id 'com.android.application' version "$agpVersion"
        id 'com.android.library' version "$agpVersion"
        id 'dagger.hilt.android.plugin' version "$daggerHiltVersion"
        id 'org.jetbrains.kotlin.android' version "$kotlinVersion"
        id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
        id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlinVersion"

        id 'com.autonomousapps.dependency-analysis' version "$dependencyAnalysisVersion"
        id 'com.diffplug.spotless' version "$spotlessVersion"
        id 'com.github.ben-manes.versions' version "$dependencyUpdatesVersion"
    }
    // map pluginId : module
    def plugins = [
        'androidx.navigation.safeargs.kotlin': 'androidx.navigation:navigation-safe-args-gradle-plugin:' + xNavigationVersion,
        'com.android.application'            : 'com.android.tools.build:gradle:' + agpVersion,
        'com.android.library'                : 'com.android.tools.build:gradle:' + agpVersion,
        'dagger.hilt.android.plugin'         : 'com.google.dagger:hilt-android-gradle-plugin:' + daggerHiltVersion
    ]
    resolutionStrategy.eachPlugin { PluginResolveDetails prd ->
        def targetId = prd.target.id.id
        if (plugins.containsKey(targetId)) prd.useModule plugins.get(targetId)
    }
}
def localProp = new Properties()
def fileLocalProp = file('local.properties')
if (fileLocalProp.exists()) {
    fileLocalProp.withInputStream { localProp.load(it) }
}

enableFeaturePreview('VERSION_CATALOGS')
dependencyResolutionManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()

        maven {
            name = "XMLUtil GitHubPackages"
            url = "https://maven.pkg.github.com/pdvrieze/xmlutil"
            credentials {
                username = localProp["gpr.user"] ?: System.getenv("USERNAME")
                password = localProp["gpr.key"] ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    versionCatalogs {
        testLibs { from(files('gradle/testLibs.versions.toml')) }
        androidxLibs { from(files('gradle/androidxLibs.versions.toml')) }
    }
}
include ':app',
        ':common',
        ':entity',
        ':htz-converter-cli',
        ':imageloader',
        ':pref',
        ':template',
        ':template-base'
