name: "Release"

on:
  push:
    tags:
      - 'v*' 

env:
  GITHUB_TOKEN: ${{ github.token }}
  JAVA_TOOL_OPTIONS: -Xmx5120m
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process

jobs:
  release:
    name: "Release"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Make gradlew and script executable
        run: |
          chmod +x ./gradlew
          chmod +x release/signing-setup.sh
          chmod +x release/signing-cleanup.sh
          chmod +x ./checksum.sh

      - name: Decrypt secrets
        run: release/signing-setup.sh $ENCRYPT_KEY
        env:
            ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - name: Gradle caches
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
          restore-keys: |
              ${{ runner.os }}-gradle-

      - name: Build Release APK with Gradle
        run: ./gradlew :app:assembleRelease

      - name: Upload mapping.txt
        uses: actions/upload-artifact@v2
          with:
            path: ./app/build/outputs/mapping/release/mapping.txt

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1        
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: true

      # TODO: must sync with appVersioning.gradle
      - name: Upload App Release Asset
        uses: actions/upload-release-asset@v1.0.1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/Hishoot2i-${{ github.ref }}-minApi16.apk
          asset_name: Hishoot2i-${{ github.ref }}-minApi16.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Clean secrets
        if: ${{ always() }}
        run: release/signing-cleanup.sh
