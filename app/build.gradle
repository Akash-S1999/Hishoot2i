apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def appName = "HiShoot2i"

android {
    compileSdkVersion buildVersion.compileSdk
    defaultConfig {
        applicationId buildVersion.applicationId
        minSdkVersion buildVersion.minSdk
        targetSdkVersion buildVersion.targetSdk
        versionCode buildVersion.versionCode
        versionName buildVersion.versionName

        def fileAuthority = "${applicationId}.fileAuthority"
        def imageReceiverKey = "${applicationId}.IMAGE_RECEIVER"

        buildConfigField("String", "FILE_AUTHORITY", "\"${fileAuthority}\"")
        buildConfigField("String", "IMAGE_RECEIVER", "\"${imageReceiverKey}\"")

        manifestPlaceholders([image_receiver_key: "${imageReceiverKey}",
                              file_authority    : "${fileAuthority}"])

        resValue("string", "app_name", "$appName")
        resValue("string", "app_version", "$versionName")

        resConfig("en")

        vectorDrawables { useSupportLibrary true }

    }
    packagingOptions {
        exclude "kotlin/**"
        exclude "**/*.kotlin_metadata"
        exclude "META-INF/*.kotlin_module"
        exclude "META-INF/*.version"
        exclude "META-INF/*.properties"
    }
    signingConfigs {
        //
        release {
            storeFile file("../hishoot2i.jks")
            storePassword System.getenv("PASS")
            keyAlias System.getenv("ALIAS")
            keyPassword System.getenv("PASS")
        }
    }
    buildTypes {
        release {
            archivesBaseName = String.format(
                    "%s-v%s-minApi%s",
                    "${appName}",
                    "${defaultConfig.versionName}",
                    "${defaultConfig.minSdkVersion.apiString}")
            debuggable false
            useProguard true
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles(
                    file('proguard-android.pro'),
                    file('proguard-app.pro')
            )
            signingConfig signingConfigs.release
        }
    }
    dexOptions {
        javaMaxHeapSize "1g"
        preDexLibraries !isTravis
    }
    lintOptions {
        warningsAsErrors true
        abortOnError true
        checkTestSources false
        htmlReport false
        xmlReport false
        textReport true
        textOutput 'stdout'
    }
}
apply plugin: 'kotlin-kapt'
kapt { useBuildCache = true }

dependencies {
    implementation project(':common')
    implementation project(':entity')
    implementation project(':imageloader')
    implementation project(':template')

    implementation deps.universalImageLoader

    implementation deps.kotlin.stdlib

    implementation deps.supportLibrary.annotations
    implementation deps.supportLibrary.appcompat
    implementation deps.supportLibrary.cardview
    implementation deps.supportLibrary.design

    implementation deps.dagger.core
    implementation deps.dagger.android
    implementation deps.dagger.androidSupport
    kapt deps.dagger.compiler
    kapt deps.dagger.androidProcessor

    implementation deps.rx.android
    implementation deps.rx.java
    implementation deps.rx.kotlin

    implementation deps.caoc
    implementation deps.kotpref
    implementation deps.kpermissions
    implementation deps.timber

    debugImplementation deps.leakcanary.android
    debugImplementation deps.leakcanary.supportFragment
    releaseImplementation deps.leakcanary.noop
    testImplementation deps.leakcanary.noop

}